# Welcome to the tileset file.
#
# The pound (#) symbols are comments. They only
# work if the # is at the beginning of the line.
# Empty lines are not parsed either.
#
# All lines after the string "[tiles]" until the
# next keyword will be considered tile configuration.
# All lines after the string "[entities]" until the
# next keyword (if any) will be considered entity
# configuration. All lines after the string
# "[commands]" until the next keyword (if any) will
# be considered the command configuration.
#
# [tiles] configuration:
#
# The syntax for the tile config is:
# <char> <imagepath> [keywords]
#
# The image path is relative to res/ folder.
# Do not include the file extension (always MCI).
# If image path is null, it won't render.
#
# The OPTIONAL case-insensitive keywords for [tiles] are:
# - solid - The character can't walk through tile
# - fluid - The character can walk through tile
# - dangerous - Kills the character on touch
# - safe - Doesn't kill the character on touch
# - spawn - Spawn tile-- character spawns here
# - checkpoint - Sets a checkpoint to spawn at on touch
# - nojump - Disable jumping on tile
# - jump - Enable jumping on tile
# - dither - Enable dithering while on tile
# - lock - Disable panning (right-click)
# - unlock - Enable panning (right-click)
# - default - Replace spaces by default with tile
# - replace=<char> - Replaces tile with char
# - copy=<char> - Copies the keywords from another tile, if already defined
# - speed=<double> - Sets the speed while on tile
# - filter=<int> - Sets the percent darkness to apply
# - teleport=<int/string> - teleports to the comma separated x,y coordinates. If there is a + or - sign before one of the coordinates, it will teleport relatively. Ex. teleport=5,+1 will go to x=5 y=y+1
# - particle={...} - Create particles when player touches tile; parameters are comma-separated; no spaces allowed in parameters
#   - Please note that the string "[min|max]" will be replaced with a random double from min to max on game init; ex. [0.1|1]
#   - color:<string> - Sets the color of the particle
#   - count:<int> - Number of particles to create every `iteration` ticks
#   - iteration:<int/string> - create `count` particles every `iteration` ticks/seconds Ex. 5=5 ticks, 1.4s=1.4 seconds
#   - lifetime:<int/string> - how long particles last. Ex. 5=5 ticks, 1.4s=1.4 seconds
#   - xacceleration:<double> - how much to accelerate every tick on the x axis
#   - yacceleration:<double> - how much to accelerate every tick on the y axis
#   - front:<boolean> - if true, particles render on top of players; else behind
# - animation={...} - Animate the tile. First parameter is a number/string how many ticks/seconds to wait before next image. Next params are the images
# - event={...} - Do things when things happen. Comma-separated events. After the colon, write the function name. Ex. {onwalk:a}
#   Events:
#   - onmove:<command> - Executes when the player moves on the tile
#   - ondeath:<command> - Executes when the player dies on the tile
#   - onentry:<command> - Executes when the player touches the tile
#   - onexit:<command> - Executes when the player leaves
#
# [commands] config:
#
# The config consists of functions. The functions
# are denoted by a string (the function name), then
# (braces) around a bunch of commands. Newlines
# or spaces are not parsed. Semicolons denote the end
# of one command and the start of another. A closing
# brace ) indicates the end of the function.
#
# Valid case-insensitive commands include:
# - kill; - Kill the player
# - dither=<boolean>; - Enable/Disable dithering while on tile
# - filter=<int>; - Sets the percent darkness to apply
# - teleport=<int/string>; - teleports to the comma separated x,y coordinates. If there is a + or - sign before one of the coordinates, it will teleport relatively. Ex. teleport=5,+1 will go to x=5 y=y+1
# - particle={...}; - Create particles when player touches tile; parameters are comma-separated; no spaces allowed in parameters
#   - Please note that the string "[min|max]" will be replaced with a random double from min to max every time the event is triggered; ex. [0.1|1]
#   - color:<string> - sets the color of the particle
#   - count:<int> - number of particles to create every `iteration` ticks
#   - iteration:<int/string> - create `count` particles every `iteration` ticks/seconds Ex. 5=5 ticks, 1.4s=1.4 seconds. Set to 1 if you want it to create a particle every time
#   - lifetime:<int/string> - how long particles last. Ex. 5=5 ticks, 1.4s=1.4 seconds
#   - xacceleration:<double> - how much to accelerate every tick on the x axis
#   - yacceleration:<double> - how much to accelerate every tick on the y axis
#   - front:<boolean> - if true, particles render on top of players; else behind

[tiles]

# Default tiles
? tiles/null solid nojump
S null spawn replace=tiles/dirt
D tiles/dirt particle={color:#5b2d00,count:4,iteration:50,lifetime:800,xacceleration:[-0.001|0.001],yacceleration:[-0.001|0.001],front:false} event={onentry:a,onmove:a}
. tiles/water speed=0.2 nojump
L tiles/lava fluid nojump dangerous default animation={300,tiles/lava,tiles/lava2,tiles/lava3,tiles/lava4}
C tiles/dirt checkpoint
_ tiles/ice speed=0.4 acceleration=0.0008 nojump slippery particle={color:#A1CAFF,count:1,iteration:35,lifetime:400,front:true,xacceleration:[-0.02|0.02],yacceleration:[-0.02|0.02]}
G tiles/gravel acceleration=0.1 speed=0.5 particle={color:#A9A9A9,count:5,front:false,iteration:35,lifetime:800,xacceleration:[-0.001|0.001],yacceleration:[-0.001|0.001]}
X tiles/gravel teleport=+0,+22
~ tiles/test solid

# Path tiles
R tiles/dirt speed=0.5 filter=0
1 tiles/dirt speed=0.4 filter=10 lock
2 tiles/dirt speed=0.35 filter=20 lock
3 tiles/dirt speed=0.3 filter=30 lock
4 tiles/dirt speed=0.25 filter=40 lock
5 tiles/dirt speed=0.225 filter=50 lock
6 tiles/dirt speed=0.2125 filter=60 lock
7 tiles/dirt speed=0.2 filter=70 lock
8 tiles/dirt speed=0.15 filter=80 lock
9 tiles/dirt speed=0.1 filter=90 lock
0 tiles/dirt speed=0.05 filter=100 lock

[commands]

# default commands

a (
    particle={color:#ffffff,count:1,iteration:200,lifetime:2000};
)

[entities]

# Default entities
